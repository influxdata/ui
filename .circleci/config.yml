version: 2.1

jobs:
  cloud-e2e:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    parallelism: 10
    working_directory: ~/
    resource_class: large
    steps:
      - checkout:
          path: ./ui
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run:
          name: Grab compose files
          command: git clone git@github.com:influxdata/monitor-ci.git
      - run:
          name: Copy over the testing variables
          command: cp ./monitor-ci/env.testing ./monitor-ci/.env
      - run:
          name: Update the images we're using
          command: cd ./monitor-ci && make update
      - run:
          name: Busting the cache
          command: cd ./monitor-ci && make build NODE=debug && make build NODE=cypress
      - run:
          name: Build the new UI (for idpe run make rebuild NODE=influxdb)
          command: cd ./monitor-ci; cp ./conf/chronograf/nginx.conf ../ui/; make rebuild NODE=chronograf
      - run:
          name: Start the cluster
          command: cd ./monitor-ci; make start
      - run:
          name: Run e2e tests
          no_output_timeout: 30m
          command: |
            cd ./monitor-ci; docker-compose -f compose/fig.cloud.yml -f compose/fig.cypress.yml run cypress ./node_modules/.bin/cypress run --browser chrome --spec "$(cd ../ui; circleci tests glob "./cypress/e2e/**/*.test.ts" | circleci tests split --split-by=timings | paste -sd "," -)" --reporter cypress-circleci-reporter
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: monitor-ci/test-artifacts/videos
          destination: test_artifacts/videos
      - store_artifacts:
          path: monitor-ci/test-artifacts/screenshots
          destination: test_artifacts/screenshots
  unit:
    docker:
      - image: circleci/golang:1.13-node-browsers
    working_directory: ~/influxdata/ui
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: "Restore Yarn Package Cache"
      - run:
          command: |
            set +e
            npx yarn install
            npx yarn prettier
          name: "Install Dependencies"
      - run: yarn generate
      - run:
          name: parallel jest tests
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.test.ts*" | circleci tests split --split-by=timings)
            npx yarn test:circleci $TESTFILES
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
          destination: raw-test-output
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: "Save Yarn Package Cache"
          paths:
            - ~/.cache/yarn
  lint:
    docker:
      - image: circleci/golang:1.13-node-browsers
    working_directory: ~/influxdata/ui
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: "Restore Yarn Package Cache"
      - run:
          command: |
            set +e
            yarn install
          name: "Install Dependencies"
      - run: yarn generate
      - run:
          name: parallel eslint
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.ts*" "cypress/**/*.ts*" | circleci tests split --split-by=filesize)
            yarn eslint:circleci $TESTFILES
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: "Save Yarn Package Cache"
          paths:
            - ~/.cache/yarn

workflows:
  version: 2
  build:
    jobs:
      - unit
      - lint
  e2e:
    jobs:
      - cloud-e2e
