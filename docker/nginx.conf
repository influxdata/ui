user nginx;
worker_processes 4;
pid /run/nginx.pid;

events {
  worker_connections  4000;
  use epoll;
  multi_accept on;
}

http {
  proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
  proxy_temp_path /var/tmp;
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout  65s;
  keepalive_requests 100000;

  fastcgi_buffers 16 16k;
  fastcgi_buffer_size 32k;

  client_body_buffer_size      128k;
  client_header_buffer_size    9k;
  output_buffers               1 32k;
  postpone_output              1460;

  client_header_timeout  3m;
  client_body_timeout    3m;
  send_timeout           3m;

  gzip_static on;
  gzip on;
  gzip_comp_level 6;
  gzip_vary on;
  gzip_min_length  1000;
  gzip_proxied any;
  gzip_types
    text/plain
    text/css
    text/js
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/wasm
    image/svg+xml;
  gzip_buffers 16 8k;

  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 5;
  open_file_cache_errors off;

  types {
    application/wasm wasm;
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  map $sent_http_content_type $expires {
    default                                 1M;

    # No content
    ""                                      off;

    # CSS
    ~*text/css                              1y;

    # Data interchange
    ~*application/atom\+xml                 1h;
    ~*application/rdf\+xml                  1h;
    ~*application/rss\+xml                  1h;

    ~*application/json                      0;
    ~*application/ld\+json                  0;
    ~*application/schema\+json              0;
    ~*application/geo\+json                 0;
    ~*application/xml                       0;
    ~*text/calendar                         0;
    ~*text/xml                              0;

    # Favicon (cannot be renamed!) and cursor images
    ~*image/vnd.microsoft.icon              1w;
    ~*image/x-icon                          1w;

    # HTML
    ~*text/html                             0;

    # JavaScript
    ~*application/javascript                1y;
    ~*application/x-javascript              1y;
    ~*text/javascript                       1y;

    # Manifest files
    ~*application/manifest\+json            1w;
    ~*application/x-web-app-manifest\+json  0;
    ~*text/cache-manifest                   0;

    # Markdown
    ~*text/markdown                         0;

    # Media files
    ~*audio/                                1M;
    ~*image/                                1M;
    ~*video/                                1M;

    # WebAssembly
    ~*application/wasm                      1y;

    # Web fonts
    ~*font/                                 1M;
    ~*application/vnd.ms-fontobject         1M;
    ~*application/x-font-ttf                1M;
    ~*application/x-font-woff               1M;
    ~*application/font-woff                 1M;
    ~*application/font-woff2                1M;

    # Other
    ~*text/x-cross-domain-policy            1w;
  }

  server {
    listen [::]:9999;
    listen 9999;

    server_name _;

    # Path for static files
    root /usr/share/nginx/html;

    location /nginx_status {
      stub_status;
      allow 127.0.0.1;
      deny all;
    }

    location / {
      try_files $uri /index.html;
    }

    # NB: ALL CSP headers are in default because otherwise for each type of source you need to fully specify allowed domains
    # and the default is NOT a fallback.
    # Unsafe-eval set because our code was throwing warnings without it.
    # Unsafe-inline required for google tag manager unless nonces are used.
    # Additions for walkme sourced from: https://support.walkme.com/knowledge-base/access-requirements-for-walkme/
    set $CSP "default-src 'unsafe-inline' 'unsafe-eval'";
    # Things Influx Owns
    set $CSP "${CSP} 'self' *.influxdata.com kubernetes.docker.internal twodotoh.a.influxcloud.dev.local";
    # Things owned by Google
    # ref.: https://developers.google.com/tag-manager/web/csp
    # gstatic domain images are for Google Tag Manager preview mode.
    set $CSP "${CSP} *.googletagmanager.com *.google.com *.google-analytics.com *.doubleclick.net *.googleapis.com *.gstatic.com www.youtube.com youtube.com/embed/* www.googleadservices.com";
    # Honeybadger
    # ref.: https://docs.honeybadger.io/guides/errors.html
    set $CSP "${CSP} *.honeybadger.io";
    # Github user content - used for templates
    set $CSP "${CSP} *.githubusercontent.com";
    # For tracking ads on Bing
    set $CSP "${CSP} bat.bing.com";
    # Walkme
    # ref.: https://support.walkme.com/knowledge-base/walkme-content-security-policy/
    set $CSP "${CSP} *.walkme.com s3.walkmeusercontent.com";
    # Marketo
    set $CSP "${CSP} munchkin.marketo.net *.mktoresp.com *.marketodesigner.com *.mktoweb.com";
    # Appcues
    # ref. https://docs.appcues.com/article/234-content-security-policies
    set $CSP "${CSP} *.appcues.com *.appcues.net";
    # Mapbox - used for mapping integrations
    set $CSP "${CSP} api.mapbox.com";
    # Zuora
    set $CSP "${CSP} *.zuora.com";
    # Cloudinary
    set $CSP "${CSP} res.cloudinary.com";
    # Emojis from twitter
    set $CSP "${CSP} twemoji.maxcdn.com";
    # CDNs which are required by some of our integrations
    set $CSP "${CSP} *.cloudfront.net s3.amazonaws.com";
    # Userpilot.io
    # ref. https://docs.userpilot.com/article/152-faq-content-security-policy
    set $CSP "${CSP} uploads.userpilot.io js.userpilot.io deploy.userpilot.io api.userpilot.io";

    # Allowable protocols -- please keep these together as they apply to all above URIs
    # If you want to add a new one that applies to a certain URI only you can use protocol://host
    # For more details see https://www.w3.org/TR/CSP2/#policy-syntax
    set $CSP "${CSP} data: blob: ws:";

    add_header Content-Security-Policy "${CSP}" always;

    # Prevents from leaking referrer data over insecure connections.
    # ref.: https://scotthelme.co.uk/a-new-security-header-referrer-policy/
    add_header Referrer-Policy 'strict-origin';

    # Protects against MIME-type confusion attack.
    # ref.: https://www.veracode.com/blog/2014/03/guidelines-for-setting-security-headers/
    add_header X-Content-Type-Options "nosniff";

    # Protects against XSS injections.
    # ref.: https://www.veracode.com/blog/2014/03/guidelines-for-setting-security-headers/
    add_header X-XSS-Protection "1; mode=block";

    # ref.: http://stackoverflow.com/a/22105445/1233379
    add_header X-Frame-Options "SAMEORIGIN";

    # Protects against Clickjacking attacks.
    # ref.: https://www.owasp.org/index.php/HTTP_Strict_Transport_Security_Cheat_Sheet
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
  }
}
