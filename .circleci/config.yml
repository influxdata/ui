version: 2.1

jobs:
  unit:
    docker:
      - image: circleci/golang:1.15-node
    working_directory: ~/influxdata/ui
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            npx yarn install
            npx yarn prettier
          name: 'Install Dependencies'
      - run: yarn generate
      - run:
          name: parallel jest tests
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.test.ts*" | circleci tests split --split-by=timings)
            npx yarn test:circleci $TESTFILES
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
          destination: raw-test-output
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn
  lint:
    docker:
      - image: circleci/golang:1.15-node
    working_directory: ~/influxdata/ui
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            yarn install
          name: 'Install Dependencies'
      - run: yarn generate
      - run:
          name: parallel eslint
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.ts*" "cypress/**/*.ts*" | circleci tests split --split-by=filesize)
            yarn eslint:circleci $TESTFILES
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn
  share-testing-image:
    docker:
      - image: circleci/golang:1.15-node
    working_directory: ~/
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout:
          path: ./ui
      - restore_cache:
          key: UI_DOCKER_IMAGE_CACHE_{{ .Environment.CIRCLE_SHA1 }}
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run:
          name: Load the prod image
          command: |
            docker load < ~/docker-cache/image.tar
      - run:
          name: Push the image to quay
          command: |
            docker tag quay.io/influxdb/ui-acceptance:${CIRCLE_SHA1} quay.io/influxdb/ui-acceptance:latest
            docker push quay.io/influxdb/ui-acceptance:${CIRCLE_SHA1}
            docker push quay.io/influxdb/ui-acceptance:latest
  monitor-ci-tests:
    docker:
      - image: circleci/golang:1.15-node
    steps:
      - checkout
      - run:
          name: Run monitor-ci tests
          command: API_KEY=${MONITOR_CI_API_KEY} PULL_REQUEST=${CIRCLE_PULL_REQUEST} MONITOR_CI_BRANCH="genehynson/circle-refactor" UI_BRANCH=${CIRCLE_BRANCH} SHA=${CIRCLE_SHA1} ./scripts/run-monitor-ci-tests.bash
workflows:
  version: 2
  build:
    jobs:
      - unit
      - lint
      - monitor-ci-tests
      - share-testing-image:
          filters:
            branches:
              only:
                - master
          requires:
            - unit
            - lint
            - monitor-ci-tests
