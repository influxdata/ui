version: 2.1

jobs:
  e2e:
    docker:
      - image: circleci/golang:1.13-node-browsers
    working_directory: ~/influxdata/ui
    steps:
      - checkout
      - setup_remote_docker
      - run: docker create -v /dummyAssets --name dac alpine:3.4 /bin/true
      - run: docker create -v /dummyTests --name dtc alpine:3.4 /bin/true

      # - restore_cache:
      #     keys:
      #       - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
      #     name: 'Restore Yarn Package Cache'
      # - run:
      #     command: |
      #       set +e
      #       yarn install
      #       yarn generate
      #       yarn build:ci
      #     name: 'Build the frontend'
      # - save_cache:
      #     key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
      #     name: 'Save Yarn Package Cache'
      #     paths:
      #       - ~/.cache/yarn
      - run: mkdir build # TODO: remove me when you actually build the js
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run: docker cp ${PWD}/build dac:/dummyAssets
      - run: docker cp ${PWD}/cypress dtc:/dummyTests
      - run:
          name: Start influxd
          command: docker run -d --volumes-from dac -p 9999:9999 --name influxd quay.io/influxdb/influxdb:2.0.0-beta influxd --store=memory --e2e-testing=true --assets-path=/dummyAssets
      - run:
          name: Run e2e tests
          command: |
            docker run --volumes-from dtc --network container:influxd cypress/browsers:node12.18.0-chrome83-ff77 \
            CYPRESS_baseUrl=http://localhost:9999 cypress run --browser chrome --reporter junit --reporter-options 'mochaFile=junit-results/test-output-[hash].xml'
      - store_test_results:
          path: ./junit-results
          destination: junit-results
      - store_artifacts:
          path: ./cypress/videos
          destination: videos
      - store_artifacts:
          path: ./cypress/screenshots
          destination: screenshots
  unit:
    docker:
      - image: circleci/golang:1.13-node-browsers
    working_directory: ~/influxdata/ui
    parallelism: 8
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            yarn install
            yarn prettier
          name: 'Install Dependencies'
      - run: yarn generate
      - run:
          name: parallel jest tests
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.test.ts*" | circleci tests split --split-by=timings)
            yarn test:circleci $TESTFILES
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
          destination: raw-test-output
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn
  lint:
    docker:
      - image: circleci/golang:1.13-node-browsers
    working_directory: ~/influxdata/ui
    parallelism: 8
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            yarn install
          name: 'Install Dependencies'
      - run: yarn generate
      - run:
          name: parallel eslint
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.ts*" "cypress/**/*.ts*" | circleci tests split --split-by=filesize)
            yarn eslint:circleci $TESTFILES
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn

workflows:
  version: 2
  build:
    jobs:
      - unit
      - lint
  e2e:
    jobs:
      - e2e
