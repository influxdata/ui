version: 2.1

jobs:
  e2e:
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    parallelism: 8
    working_directory: ~/influxdata/ui
    resource_class: large
    steps:
      - checkout
      - run: docker login -u=$QUAY_USER -p=$QUAY_PASS quay.io
      - run:
          name: Build Cypress image, js, and dependencies
          command: docker build -t e2e:latest -f docker/Dockerfile.cypress .
      - run:
          name: Run Cypress image to expose production js
          command: docker run -d --name prod_js e2e:latest /bin/true
      - run:
          name: Copy production js into temporary volume (so another container can use it see #TODO link to why we have to do this)
          command: docker cp prod_js:/repo/build ./build
      - run:
          name: Build web server
          command: docker build -t webserver:latest -f docker/Dockerfile.server .
      - run:
          name: Build ingress server
          command: docker build -t ingress:latest -f docker/Dockerfile.ingress ./docker
      - run:
          name: Start influxd
          command: docker run -d --net=host -p 9999:9999 --name influxd quay.io/influxdb/influxdb:2.0.0-beta influxd --store=memory --e2e-testing=true
      - run:
          name: Start ingress server and link to influxd
          command: docker run -d --net=host -p 443:443 ingress:latest
      - run:
          name: Start web server server and link to influxd
          command: docker run -d --net=host -p 8080:8080 webserver:latest
      - run:
          name: Run e2e tests
          command: |
            docker run --net=host -v ${PWD}/test-artifacts:/repo/junit-results \
            -v /tmp/.X11-unix:/tmp/.X11-unix \
            -e CYPRESS_baseUrl=https://localhost:443 e2e:latest \
            bash -c "yarn cypress run --browser chrome --spec "$(circleci tests glob "./cypress/e2e/**/*.test.ts" | circleci tests split --split-by=timings --timings-type=classname | paste -sd "," -)" --reporter junit --reporter-options 'mochaFile=junit-results/test-output-[hash].xml'"
      - store_test_results:
          path: ./test-artifacts
      - store_artifacts:
          path: ./test-artifacts
          destination: test_results
  unit:
    docker:
      - image: circleci/golang:1.13-node-browsers
    working_directory: ~/influxdata/ui
    parallelism: 8
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            yarn install
            yarn prettier
          name: 'Install Dependencies'
      - run: yarn generate
      - run:
          name: parallel jest tests
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.test.ts*" | circleci tests split --split-by=timings)
            yarn test:circleci $TESTFILES
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
          destination: raw-test-output
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn
  lint:
    docker:
      - image: circleci/golang:1.13-node-browsers
    working_directory: ~/influxdata/ui
    parallelism: 8
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Restore Yarn Package Cache'
      - run:
          command: |
            set +e
            yarn install
          name: 'Install Dependencies'
      - run: yarn generate
      - run:
          name: parallel eslint
          command: |
            set +e
            TESTFILES=$(circleci tests glob "src/**/*.ts*" "cypress/**/*.ts*" | circleci tests split --split-by=filesize)
            yarn eslint:circleci $TESTFILES
      - save_cache:
          key: 'yarn-cached-packages-{{ checksum "yarn.lock" }}'
          name: 'Save Yarn Package Cache'
          paths:
            - ~/.cache/yarn

workflows:
  version: 2
  build:
    jobs:
      - unit
      - lint
  e2e:
    jobs:
      - e2e
